@page
@model IndexModel
@using ServiceProtocol.Common;
@using Microsoft.AspNetCore.Html;
@{
    ViewData["Title"] = "Home";
    int officalTournaments = 0;
    int nonOfficalTours = 0;
    bool mostRecnetGameInProgress = Model.MostRecentTour != null ? Model.MostRecentTour.Status != TournamentStatus.Complete && Model.MostRecentTour.Status != TournamentStatus.Error  : false; 
}
    <head>
        <style>
            .listItem {
                padding-left:20px;
            }
            .headingSubText {
                font-size:15px;
                padding-left:2px;
            }
        </style>
        <script>
            const refreshIntervalSec = 10;
            let currentRefreshCountDown = refreshIntervalSec;           

            setInterval(function () {
                $("#RefreshValue").html(currentRefreshCountDown);
                currentRefreshCountDown--;
                if (currentRefreshCountDown == -1) {
                    window.location.reload(1);
                }
            }, 1000);
        </script>
    </head>


    <div>
        <div id="RefreshText">Refreshing in <span id="RefreshValue">10</span>...</div>
        <br />
        <h3>Bot Leaderboard @if (mostRecnetGameInProgress)
        {<span class="headingSubText">Games In Progress...</span>}</h3>
        @if (Model.MostRecentTour == null)
        {
            <div class="listItem">No Recent Official Tournaments.</div>
        }
        else
        {
            int count = 1;
            foreach (TournamentResult result in Model.MostRecentTour.Results)
            {
                <div class="listItem"><strong>#@count. <span style="display:inline-block;min-width:100px;">@result.BotName</span></strong> - @result.Wins wins, @result.Losses losses, @Math.Round(result.WinRate)% win rate.</div>
                count++;
            }
            if (count == 1)
            {
                <div class="listItem">No Results Yet...</div>
            }
        }

        <br />
        <h3>Official Tournament List <a href="CreateOfficialTournament" class="headingSubText">Start New Tournament</a></h3>
        @foreach (KokkaKoroTournament t in Model.Tournaments)
        {
            if (t.IsOfficial)
            {
                officalTournaments++;
                TimeSpan runTime = (t.EndedAt.HasValue ? t.EndedAt.Value : DateTime.UtcNow) - t.CreatedAt;
                <div class="listItem"><strong>#@officalTournaments. <a href="ViewTournament?Id=@t.Id">@t.Name</a></strong> - @t.Status, @t.Games.Count/@t.TotalGames Games Created, @(Math.Round(runTime.TotalMinutes)):@(runTime.Seconds.ToString("00")) Minutes Duration</div>;
            }
        }
        @if (officalTournaments == 0)
        {
            <div class="listItem">No Recent Official Tournaments.</div>
        }

        <br />
        <h3>Tournament List</h3>
        @foreach (KokkaKoroTournament t in Model.Tournaments)
        {
            if (!t.IsOfficial)
            {
                nonOfficalTours++;
                //printTournament((t, 0));
            }
        }
        @if (nonOfficalTours == 0)
        {
            <div class="listItem">No Recent Tournaments.</div>
        }

        <br />
        <h3>Game List</h3>
        @foreach (KokkaKoroGame game in Model.Games)
        {
            <div class="listItem"><strong><a href="ViewGame?GameId=@game.Id">@game.GameName</a></strong> - @game.State - Created by @game.CreatedBy, @((DateTime.UtcNow - game.Created).TotalMinutes.ToString("0.0")) minutes ago</div>
        }
        @if (Model.Games.Count == 0)
        {
            <div class="listItem">No Recent Games.</div>
        }
    </div>


